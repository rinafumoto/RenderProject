shader shader(
    color Cin  = 0,
    float damage  = 0,
    output color Cout = 0,
    output color Cout2 = 0,
    output float disp = 0,
    output float disp2 = 0,
    output color test = 0
)
{
    // Uniform Lines
    int f = (int)floor(u*2400);
    disp = (float)(f%2);
    Cout = (1.25-disp*0.5)*Cin;

    // Random Lines
    int i=0;
    float randomLines;
    float filter;
    float mag = 0;
    float freq = 1;

    for (i=0;i<7;i+=1)
    {
        randomLines = (float)noise("uperlin",(u+freq)*300+freq);
        randomLines = smoothstep(0,0.8,randomLines);
        filter = (float)noise("uperlin",(v+freq)*10+noise("perlin",((u+freq)*25))*0.3);
        filter = smoothstep(0.2,0.8,filter);
        mag += 1-smoothstep(0,1,randomLines+filter);
        mag = smoothstep(0,1,mag);
        freq *= 2.1;
    }

    mag = 1-mag;
    color dark=color("rgb",0.33,0.13,0.04);
    Cout = mix(Cin,dark,mag*0.5);

    // Fingerprint
    mag = (float)noise("usimplex", P*10);
    float mask = smoothstep(0,1,sin(v*4));
    Cout2 = mix(Cout,Cin,mag*mask);

    // white pattern;
	mag=abs((float)noise("perlin",P*100))*20;
    mag=smoothstep(0.9,1,1-mag);
    mask = smoothstep(0,1,sin(v*6-1));
    disp2 = smoothstep(0,1,mag*mask+disp);
    Cout2 = mix(Cout2,1,mag*mask);

    // Dots
    float dots = noise("usimplex",P*20);
    dots = linearstep(0.9,1,dots);
    color dotcolor = color("rgb",0.23,0.03,0.0);
    Cout = mix(Cout,dotcolor,dots);
    Cout2 = mix(Cout2,dotcolor,dots);
    disp += dots*noise("uperlin",P)*10;
    disp2 += dots*noise("uperlin",P)*10;
    
    if(v > 0.01 && v < 0.99)
    {
        disp2 += (1-damage)*300;
    }

}
